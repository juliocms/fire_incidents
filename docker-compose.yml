services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./dbt/models/01_create_tables.sql:/docker-entrypoint-initdb.d/01_create_tables.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - postgres

  etl:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./scripts:/app/scripts
      - ./data:/app/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
    depends_on:
      - postgres
    command: sh -c "python scripts/etl.py" 
    #&& sleep infinity"

  normalize_csv:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./scripts:/app/scripts
      - ./data:/app/data
    command: python scripts/normalize_columns.py

volumes:
  postgres_data: 